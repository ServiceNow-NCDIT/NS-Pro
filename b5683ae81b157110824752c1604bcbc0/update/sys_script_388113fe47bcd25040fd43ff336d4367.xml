<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_sonc_ns_pro_nspro_tasks</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_g_sonc_ns_pro_nspro_tasks">stateCHANGESTO3^ORstateCHANGESTO4^ORstateCHANGESTO7^EQ<item display_value="Closed Complete" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/>
            <item display_value="Closed Incomplete" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="4"/>
            <item display_value="Closed Skipped" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="7"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Close Network Services Request</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	gs.info('br fired');

	var grTask = new GlideRecord('x_g_sonc_ns_pro_nspro_tasks');
	grTask.addQuery('telco_order', current.telco_order);
	grTask.addQuery('sys_id', '!=', current.sys_id);
	grTask.addQuery('state', '<', '3');
	grTask.query();
	if (!grTask.next()) {
		// gs.info('closing request ' + current.telco_order.number);
		grTask.setWorkflow(false);
		var grReq = new GlideRecord('x_g_sonc_ns_pro_telco_order');
		if (grReq.get(current.telco_order)) {
			grReq.provisioning_state = '3';
			grReq.update();
		}
	}
	else {
		// gs.info('not closing request ' + current.telco_order.number);
		var grReq = new GlideRecord('x_g_sonc_ns_pro_telco_order');
		if (grReq.get(current.telco_order)) {
			grReq.provisioning_state = '2';
			grReq.update();
		}
	}


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>wbbusby</sys_created_by>
        <sys_created_on>2024-09-26 11:54:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>388113fe47bcd25040fd43ff336d4367</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Close Network Services Request</sys_name>
        <sys_overrides/>
        <sys_package display_value="NS Pro" source="x_g_sonc_ns_pro">b5683ae81b157110824752c1604bcbc0</sys_package>
        <sys_policy/>
        <sys_scope display_value="NS Pro">b5683ae81b157110824752c1604bcbc0</sys_scope>
        <sys_update_name>sys_script_388113fe47bcd25040fd43ff336d4367</sys_update_name>
        <sys_updated_by>admglfry</sys_updated_by>
        <sys_updated_on>2024-10-16 12:27:01</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=388113fe47bcd25040fd43ff336d4367"/>
</record_update>
