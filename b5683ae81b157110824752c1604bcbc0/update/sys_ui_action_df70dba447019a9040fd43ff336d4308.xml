<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>sysverb_update_and_stay</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>RP.isRelatedList() &amp;&amp; RP.getReferringURL().indexOf("x_g_sonc_ns_pro_nspro_tasks.do") == 0  &amp;&amp; current.name != ''</condition>
        <form_action>false</form_action>
        <form_button>false</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint>Select Host Circuit from Preferred or all listing</hint>
        <isolate_script>true</isolate_script>
        <list_action>true</list_action>
        <list_banner_button>true</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style>destructive</list_style>
        <messages/>
        <name>Select Host Circuit</name>
        <onclick>selectionHostCircuitDialog()</onclick>
        <order>100</order>
        <script><![CDATA[function selectionHostCircuitDialog() {
    var modalName = "multiSelectAction";
    var modalTitle = 'Select Host Circuit Method';
    var modalContent;

    var contentObj = {};
    contentObj.id = "selectHostCircuitMethod";
    contentObj.title = "Select Host Circuit From Selection List:";

    var options = [];
    var option = {};
    option.optionValue = "suggestedHostCircuitList";
    option.optionText = "Select Suggested Host Circuit";
    options.push(option);
    option = {};
    option.optionValue = "selectHostCircuitFromAll";
    option.optionText = "Manual Select Host Circuit From All";
    options.push(option);

    contentObj.options = options;

    var modals = new GlideAjax('x_g_sonc_ns_pro.core_nspro_modals_ajax');
    modals.addParam('sysparm_name', 'constructMultiSelectContent');
    modals.addParam('sysparm_contentObjString', JSON.stringify(contentObj));
    modals.getXMLAnswer(getResponse);

    function getResponse(response) {
        var answer = JSON.parse(response);
        if (answer.status != 'success') {
            alert("Error Occured " + answer.message);

        } else {
            modalContent = answer.message;
            //alert(modalContent);
            var gm = new GlideModal(modalName);
            gm.setTitle(modalTitle);
            gm.renderWithContent(modalContent);

            top.window.multiActionCancel = function() {
                gm.destroy();
                return;
            };

            //We'll use the windows object to ensure our code is accessible from the modal dialog
            top.window.multiActionSubmit = function(thisButton, thisAction) {

                //Close the glide modal dialog window
                gm.destroy();

                //Submit to the back-end
                if (thisButton == 'OK') {
                    var url;
                    if (thisAction == "suggestedHostCircuitList") {
                        var site = g_form.getValue('site');
                        var telcoProvider = g_form.getValue('telco_provider');

                        var queryStringZip = 'telco_provider=' + telcoProvider + '^site=' + site + '^ORDERBYdistance';
                        url = new GlideURL("x_g_sonc_ns_pro_st_host_circuit_selection_list.do");
                        url.addParam("sysparm_fixed_query", queryStringZip);
                        url.addParam("sysparm_view", "selecthostcircuit");
                        url.addParam("sysparm_view_forced", true);

                        var hostCirSugW = new GlideOverlay({
                            title: getMessage("Right Click to Select Desired Host Circuit"),
                            iframe: url.getURL(),
                            draggable: true,
                            allowOverflowX: true,
                            scroll: true,
                            height: "70%",
                            width: "90%",
                            closeOnEscape: true,
                            //onAfterLoad: resizeIframe,
                            onAfterClose: function() {
                                location.reload();

                            }
                        });
                        hostCirSugW.setPreference('sysparm_sys_id', g_form.getUniqueValue());
                        hostCirSugW.render();
                        hostCirSugW.showFooterResizeGrips(true);


                    } else if (thisAction == "selectHostCircuitFromAll") {
                        var queryStringAll = 'ORDERBYDESCavailable_capacity';
                        url = new GlideURL("x_g_sonc_ns_pro_st_host_circuits_with_capacity_list.do");
                        url.addParam("sysparm_query", queryStringAll);
                        //url.addParam("sysparm_table","x_g_sonc_ns_pro_st_host_circuits_with_capacity_list");
                        url.addParam("sysparm_view", "nspro");
                        url.addParam("sysparm_view_forced", true);
                        //alert(url.getURL());
                        var hostCirSugAll = new GlideOverlay({
                            title: getMessage("Right Click to Select Desired Host Circuit"),
                            iframe: url.getURL(),
                            draggable: true,
                            allowOverflowX: true,
                            scroll: true,
                            height: "70%",
                            width: "90%",
                            closeOnEscape: true,
                            //onAfterLoad: resizeIframe,
                            onAfterClose: function() {
                                location.reload();

                            }
                        });

                        hostCirSugAll.render();
                        hostCirSugAll.showFooterResizeGrips(true);

                    } else {
                        alert('no choice');

                    }
                }
            };






            return false; //prevents the form from submitting when the dialog first loads
        } // end of else response
    }


} //end selectionTelcoDialog()]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admglfry</sys_created_by>
        <sys_created_on>2024-10-01 22:09:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>df70dba447019a9040fd43ff336d4308</sys_id>
        <sys_mod_count>48</sys_mod_count>
        <sys_name>Select Host Circuit</sys_name>
        <sys_overrides/>
        <sys_package display_value="NS Pro" source="x_g_sonc_ns_pro">b5683ae81b157110824752c1604bcbc0</sys_package>
        <sys_policy/>
        <sys_scope display_value="NS Pro">b5683ae81b157110824752c1604bcbc0</sys_scope>
        <sys_update_name>sys_ui_action_df70dba447019a9040fd43ff336d4308</sys_update_name>
        <sys_updated_by>admglfry</sys_updated_by>
        <sys_updated_on>2024-10-10 17:11:32</sys_updated_on>
        <table>x_g_sonc_ns_pro_telco_provider</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
